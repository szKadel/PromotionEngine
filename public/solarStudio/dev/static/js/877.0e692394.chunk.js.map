{"version":3,"file":"static/js/877.0e692394.chunk.js","mappings":"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","sources":["shared/TimeLineCalendar/lib/Filter/lib/isYearFilterButtonSelected.js","shared/TimeLineCalendar/lib/Filter/ui/Filter.jsx","shared/TimeLineCalendar/lib/Filter/lib/getMonthsButton.js","shared/TimeLineCalendar/ui/TimeLineCalendar.jsx","shared/TimeLineCalendar/lib/getDefaultTimeByMonth.js","shared/TimeLineCalendar/TimeLineCalendar.jsx","shared/TimeLineCalendar/lib/getGroupsByEmployees.js","shared/TimeLineCalendar/lib/getItemsByVacationRequests.js","pages/vacations/Calendar/ui/Calendar.jsx"],"sourcesContent":["export const isYearFilterButtonSelected = (buttonValue,selectedYear) =>buttonValue === selectedYear","import \"./style.css\";\r\nimport { useState } from \"react\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Button } from \"primereact/button\";\r\nimport { getMonthsButton, isYearFilterButtonSelected } from \"../lib\";\r\n\r\nexport const Filter = ({ i18n, filterState }) => {\r\n  const { t } = i18n;\r\n\r\n  const currentDate = new Date();\r\n  const currentYear = currentDate.getFullYear();\r\n  \r\n  const yearsFilterButtonsValues = [currentYear - 1,currentYear,currentYear + 1]\r\n\r\n  const [filterStateValue, setFilterStateValue] = filterState\r\n\r\n  const departmentSelectOptions = [{ label: \"Główny\", value: \"Główny\" }];\r\n  const [departmentSelectState, setDepartmentSelectState] = useState(\r\n    departmentSelectOptions[0].value\r\n  );\r\n\r\n  const employeeSelectOptions = [\r\n    { label: \"Baran Sara\", value: \"Baran Sara\" },\r\n    { label: \"Ostap Diachok\", value: \"Ostap Diachok\" },\r\n  ];\r\n  const [employeeSelectState, setEmployeeSelectState] = useState(null);\r\n\r\n  const monthsButtons = getMonthsButton(i18n, filterState)\r\n\r\n  return (\r\n    <div className=\"TimeLineCalendarFilter\">\r\n      {/* <div className=\"TimeLineCalendarFilter_row\">\r\n        <div className=\"TimeLineCalendarFilter_input_container\">\r\n          <label>{t(\"repeatedWords.department\")}</label>\r\n          <Dropdown\r\n            placeholder={t(\"repeatedWords.all\")}\r\n            value={departmentSelectState}\r\n            onChange={(e) => setDepartmentSelectState(e.value)}\r\n            options={departmentSelectOptions}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"TimeLineCalendarFilter_input_container\">\r\n          <label>{t(\"repeatedWords.employee\")}</label>\r\n          <Dropdown\r\n            placeholder={t(\"repeatedWords.all\")}\r\n            value={employeeSelectState}\r\n            onChange={(e) => setEmployeeSelectState(e.value)}\r\n            options={employeeSelectOptions}\r\n          />\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"TimeLineCalendarFilter_row\">\r\n        <div className=\"TimeLineCalendarFilter_years\">\r\n          <Button label={yearsFilterButtonsValues[0]} \r\n          {...isYearFilterButtonSelected(yearsFilterButtonsValues[0],filterStateValue.year)?{}:{severity:\"secondary\",text:true}}\r\n          onClick={()=>setFilterStateValue(prevState =>({...prevState,year:yearsFilterButtonsValues[0]}))}\r\n          />\r\n          <Button label={yearsFilterButtonsValues[1]}\r\n          {...isYearFilterButtonSelected(yearsFilterButtonsValues[1],filterStateValue.year)?{}:{severity:\"secondary\",text:true}}\r\n          onClick={()=>setFilterStateValue(prevState =>({...prevState,year:yearsFilterButtonsValues[1]}))}\r\n          />\r\n          <Button label={yearsFilterButtonsValues[2]}\r\n          {...isYearFilterButtonSelected(yearsFilterButtonsValues[2],filterStateValue.year)?{}:{severity:\"secondary\",text:true}}\r\n          onClick={()=>setFilterStateValue(prevState =>({...prevState,year:yearsFilterButtonsValues[2]}))}\r\n          />\r\n        </div>\r\n        <div className=\"TimeLineCalendarFilter_months\">{monthsButtons}</div>\r\n        {/* <Button label={\"Cały rok\"} severity=\"secondary\" outlined /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Button } from \"primereact/button\";\r\n\r\nexport const getMonthsButton = (i18n,filterState) => {\r\n  const getStyleConfig = (monthId, electedMonth) =>\r\n    monthId === electedMonth\r\n      ? { severity: \"primary\", outlined: true }\r\n      : { severity: \"secondary\", text: true };\r\n\r\n  const buttons = [];\r\n\r\n  const [filterStateValue,setFilterState] = filterState\r\n\r\n  const dateFormat = new Intl.DateTimeFormat(i18n.resolvedLanguage, {\r\n    month: \"short\",\r\n  });\r\n\r\n  const dateForMonths = new Date();\r\n\r\n  for (let monthId = 0; monthId < 12; monthId++) {\r\n    dateForMonths.setMonth(monthId);\r\n    const monthName = dateFormat\r\n      .formatToParts(dateForMonths)\r\n      .find((part) => part.type === \"month\").value;\r\n    buttons.push(\r\n      <Button\r\n        label={monthName}\r\n        className=\"imeLineCalendarFilter_month_button\"\r\n        {...getStyleConfig(monthId,filterStateValue.jsMonthId)}\r\n        key={monthId}\r\n        onClick={()=>setFilterState(prevState =>({...prevState,jsMonthId:monthId}))}\r\n      />\r\n    );\r\n  }\r\n\r\n  return buttons;\r\n};\r\n","import Timeline from \"react-calendar-timeline\";\r\nimport \"react-calendar-timeline/lib/Timeline.css\";\r\nimport {\r\n  TimelineMarkers,\r\n  TodayMarker,\r\n  TimelineHeaders,\r\n  SidebarHeader,\r\n  DateHeader,\r\n} from \"react-calendar-timeline\";\r\nimport \"./style.css\";\r\nimport moment from \"moment\";\r\nimport { Filter, getDefaultTimeByYear, getDefaultTimeByMonth } from \"../lib\";\r\nimport { useMemo } from \"react\";\r\n\r\nexport const TimeLineCalendar = ({ i18n, filterState, children, employeesGroups = [] ,vacationRequestsItems = [] }) => {\r\n  const { t } = i18n;\r\n\r\n  const [filterStateValue] = filterState;\r\n\r\n  const items = [\r\n    {\r\n      id: 1,\r\n      group: 1,\r\n      title: \"P\",\r\n      start_time: moment(),\r\n      end_time: moment().add(3, \"day\"),\r\n    },\r\n    {\r\n      id: 2,\r\n      group: 2,\r\n      title: \"UW\",\r\n      start_time: moment().add(-0.5, \"day\"),\r\n      end_time: moment().add(2.5, \"day\"),\r\n      itemProps: {\r\n        style: {\r\n          background: \"#ffe200\",\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  console.log(vacationRequestsItems);\r\n\r\n  const calendarHorizontalLineHeight = useMemo(\r\n    () =>\r\n      window\r\n        .getComputedStyle(document.documentElement)\r\n        .getPropertyValue(\"--calendarHorizontalLineHeight\"),\r\n    []\r\n  );\r\n  const calendarHorizontalLineHeightPxNumber = useMemo(\r\n    () => Number(calendarHorizontalLineHeight.slice(0, -2)),\r\n    []\r\n  );\r\n\r\n  // const defaulTimeByYear = getDefaultTimeByYear(filterStateValue.year)\r\n  const defaulTimeByMonth = getDefaultTimeByMonth(\r\n    filterStateValue.year,\r\n    filterStateValue.jsMonthId\r\n  );\r\n\r\n  return (\r\n    <div className=\"TimeLineCalendar_container\">\r\n      <Filter i18n={i18n} filterState={filterState} />\r\n      {children ? (\r\n        children\r\n      ) : (\r\n        <Timeline\r\n          groups={employeesGroups}\r\n          items={vacationRequestsItems}\r\n          defaultTimeStart={defaulTimeByMonth.start}\r\n          defaultTimeEnd={defaulTimeByMonth.end}\r\n          lineHeight={calendarHorizontalLineHeightPxNumber}\r\n          canMove={false}\r\n          canResize={false}\r\n        >\r\n          <TimelineMarkers>\r\n            <TodayMarker />\r\n          </TimelineMarkers>\r\n\r\n          <TimelineHeaders>\r\n            <SidebarHeader>\r\n              {({ getRootProps }) => {\r\n                return (\r\n                  <div className=\"rct-left-group-header\" {...getRootProps()}>\r\n                    {t(\"repeatedWords.employee\")}\r\n                  </div>\r\n                );\r\n              }}\r\n            </SidebarHeader>\r\n            <DateHeader className=\"rct-main-time-header\" />\r\n          </TimelineHeaders>\r\n        </Timeline>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const getDefaultTimeByMonth = (currentYear, jsMonthId) => {\r\n  const nextMonthId = jsMonthId === 11 ? 0 : jsMonthId + 1;\r\n  const nextMonthYear =  jsMonthId === 11 ? currentYear + 1: currentYear\r\n\r\n  const start = new Date(currentYear, jsMonthId, 0);\r\n  const end = new Date(nextMonthYear, nextMonthId, 0);\r\n  \r\n  return { start, end };\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { TimeLineCalendar as UI } from \"./ui/TimeLineCalendar\";\r\nimport { Loading } from \"../Loading\";\r\nimport { Error } from \"../Error\";\r\nimport { api } from \"../api\";\r\nimport { getGroupsByEmployees, getItemsByVacationRequests } from \"./lib\";\r\nimport { itemsPerPageForAllItems } from \"../../entities/itemsPerPageForAllItems\";\r\n\r\nexport const TimeLineCalendar = ({ i18n,currentUser }) => {\r\n  const currentDate = new Date();\r\n  const filterState = useState({year:currentDate.getFullYear(), jsMonthId: currentDate.getMonth()})\r\n\r\n  const isInitialRender = useRef(true);\r\n\r\n  const [componentStatus, setComponentStatus] = useState({ status: \"loading\" });\r\n  const [filterStateValue] = filterState\r\n\r\n  useEffect(()=>{\r\n    if(!isInitialRender.current){\r\n      setComponentStatus(prevState=>({...prevState,status:\"loading\"}))\r\n      setTimeout(()=>setComponentStatus(prevState=>({...prevState,status:\"success\"})),300)\r\n    }else isInitialRender.current = false\r\n  },[filterStateValue])\r\n\r\n  useEffect(() => {\r\n    if(currentUser){\r\n      (async () => {\r\n      const vacationTypesResponse = await api.vacationTypes.get({itemsPerPage:itemsPerPageForAllItems})\r\n\r\n      if (vacationTypesResponse.error || vacationTypesResponse.warning) {\r\n        setComponentStatus({\r\n          status: \"error\",\r\n          data: vacationTypesResponse.error || vacationTypesResponse.warning,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const employeesResponse = await ((currentUser.roles.includes(\"ROLE_ADMIN\"))?api.employees.get({itemsPerPage:itemsPerPageForAllItems}): currentUser?.employee?api.employees.getById(currentUser.employee.id):api.employees.get({itemsPerPage:itemsPerPageForAllItems}))\r\n\r\n      if (employeesResponse.error || employeesResponse.warning) {\r\n        setComponentStatus({\r\n          status: \"error\",\r\n          data: employeesResponse.error || employeesResponse.warning,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const vacationRequestsResponse = await api.vacations.get({itemsPerPage:itemsPerPageForAllItems})\r\n\r\n      if (vacationRequestsResponse.error || vacationRequestsResponse.warning) {\r\n        setComponentStatus({\r\n          status: \"error\",\r\n          data: vacationRequestsResponse.error || vacationRequestsResponse.warning,\r\n        });\r\n        return;\r\n      }\r\n\r\n      setComponentStatus({status:\"success\",data:{employeesResponse,vacationRequestsResponse,vacationTypesResponse}})\r\n\r\n    })();\r\n    }\r\n    \r\n  }, [currentUser]);\r\n\r\n  if(componentStatus.status === \"loading\")return <UI i18n={i18n} filterState={filterState}><Loading/></UI>\r\n  if(componentStatus.status === \"error\")return <UI i18n={i18n} filterState={filterState}><Error error={componentStatus.data}/></UI>\r\n\r\n  if(componentStatus.status === \"success\"){\r\n    const employees =  currentUser.roles.includes(\"ROLE_ADMIN\")?componentStatus.data.employeesResponse[\"hydra:member\"]:[componentStatus.data.employeesResponse]\r\n    const employeesGroups = getGroupsByEmployees(employees)\r\n    \r\n    const vacationRequests = componentStatus.data.vacationRequestsResponse[\"hydra:member\"]\r\n    const vacationTypes = componentStatus.data.vacationTypesResponse[\"hydra:member\"]\r\n    const vacationRequestsItems = getItemsByVacationRequests(vacationRequests,vacationTypes)\r\n\r\n    return <UI i18n={i18n} filterState={filterState} employeesGroups={employeesGroups} vacationRequestsItems={vacationRequestsItems}/>\r\n  }\r\n};\r\n","export const getGroupsByEmployees = (employees) =>{\r\n    const groups = []\r\n    employees.forEach(employee => {\r\n        groups.push({id:employee[\"@id\"], title:`${employee.name} ${employee.surname}`})\r\n    });\r\n\r\n    return groups\r\n}","import { getVacationTypeById } from \"../../lib\";\r\n\r\nexport const getItemsByVacationRequests = (vacationRequests, vacationTypes) =>{\r\n    const items = []\r\n    vacationRequests.forEach(request => {\r\n        items.push({id:request[\"@id\"],group:request.employee[\"@id\"], title:getVacationTypeById(request.type[\"@id\"],vacationTypes).name,start_time: new Date(request.dateFrom), end_time: new Date(request.dateTo)})\r\n    });\r\n\r\n    return items\r\n}\r\n\r\n","import { PageHeader } from \"../../../../shared/PageHeader\";\r\nimport { PageFooter } from \"../../../../shared/PageFooter\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./style.css\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TimeLineCalendar } from \"../../../../shared/TimeLineCalendar\";\r\nimport { initialProjectDirectory } from \"../../../../entities/initialProjectDirectory\";\r\n\r\n\r\nconst Calendar = ({currentUser}) => {\r\n  const { i18n } = useTranslation();\r\n  const { t } = i18n;\r\n\r\n  return (\r\n    <main className=\"page vacationsCalendar_page container_local\">\r\n      <PageHeader title={t(\"menu.subMenuVacations.menuItemCalendar\")} >\r\n        <div className=\"vacationsCalendar_page_action_buttons_container\">\r\n          <Link to={`${initialProjectDirectory}/vacations/createRequest`}><Button label={`+ ${t(\"pages.vacations.calendar.actionButtonsContainer.addPlanRequestButton\")}`} outlined/></Link>\r\n          <Link to={`${initialProjectDirectory}/vacations/createRequest`}><Button label={`+ ${t(\"pages.vacations.listOfRequests.addNewRequestButton\")}`} outlined/></Link>\r\n        </div>\r\n      </PageHeader>\r\n\r\n      <div className=\"page_content\">\r\n        <TimeLineCalendar i18n={i18n} currentUser={currentUser}/>\r\n      </div>\r\n\r\n      <PageFooter />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Calendar;"],"names":["isYearFilterButtonSelected","buttonValue","selectedYear","Filter","_ref","i18n","filterState","currentYear","t","Date","getFullYear","yearsFilterButtonsValues","_filterState","_slicedToArray","filterStateValue","setFilterStateValue","_useState","useState","_useState2","_useState3","_useState4","monthsButtons","buttons","setFilterState","dateFormat","Intl","DateTimeFormat","resolvedLanguage","month","dateForMonths","_loop","monthId","setMonth","monthName","formatToParts","find","part","type","value","push","_createElement","Button","_objectSpread","label","className","electedMonth","severity","outlined","text","getStyleConfig","jsMonthId","key","onClick","prevState","getMonthsButton","_jsx","children","_jsxs","year","TimeLineCalendar","_ref$employeesGroups","employeesGroups","_ref$vacationRequests","vacationRequestsItems","moment","add","console","log","calendarHorizontalLineHeight","useMemo","window","getComputedStyle","document","documentElement","getPropertyValue","calendarHorizontalLineHeightPxNumber","Number","slice","defaulTimeByMonth","nextMonthId","nextMonthYear","start","end","getDefaultTimeByMonth","Timeline","groups","items","defaultTimeStart","defaultTimeEnd","lineHeight","canMove","canResize","TimelineMarkers","TodayMarker","TimelineHeaders","SidebarHeader","_ref2","getRootProps","DateHeader","currentUser","currentDate","getMonth","isInitialRender","useRef","status","componentStatus","setComponentStatus","useEffect","current","setTimeout","_asyncToGenerator","_regeneratorRuntime","mark","_callee","vacationTypesResponse","employeesResponse","vacationRequestsResponse","wrap","_context","prev","next","api","itemsPerPage","itemsPerPageForAllItems","sent","error","warning","data","abrupt","roles","includes","employee","id","stop","UI","Loading","Error","employees","forEach","title","concat","name","surname","getGroupsByEmployees","vacationRequests","vacationTypes","request","group","getVacationTypeById","start_time","dateFrom","end_time","dateTo","getItemsByVacationRequests","useTranslation","PageHeader","Link","to","initialProjectDirectory","PageFooter"],"sourceRoot":""}